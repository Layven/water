
cbuffer data :register(b0)
{
	float4x4 worldViewProj;
	float time;
	float speed;
    float wavelength;
    float amplitude;
	float4 waveDir;
};

struct VS_IN
{
	float4 position : POSITION;
	float4 color : COLOR;
};

struct PS_IN
{
	float4 position : SV_POSITION;
	float4 color : COLOR;
};

PS_IN VS( VS_IN input)
{
	PS_IN output = (PS_IN)0;

	float4 pos = input.position;
	
	float dist = dot(pos,waveDir);
	float phase = 2.0*3.1415*(dist + speed*time)/wavelength;

	pos.y = pos.y + amplitude*sin(phase);
	pos = mul(worldViewProj,pos);

	output.position = pos;
	output.color=input.color;

	return output;
}

float4 PS( PS_IN input ) : SV_Target
{
	return input.color;
}